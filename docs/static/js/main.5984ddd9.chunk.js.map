{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","estadoAnterior","placeholder","type","value","onChange","e","target","getGifs","category","a","url","encodeURI","fetch","respo","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","image","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAMC,iBACFJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAc,OAAKP,GAAL,mBAAoBO,OAChDN,EAAc,OAMd,2BAAOO,YAAY,oBAAoBC,KAAK,OAAOC,MAAOV,EAAYW,SAdhD,SAACC,GACzBX,EAAcW,EAAEC,OAAOH,Y,uBCPdI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEDI,MAAMF,GAFL,cAEfG,EAFe,gBAGAA,EAAMC,OAHN,uBAGdC,EAHc,EAGdA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARjB,kBAWdM,GAXc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,yBAAKc,UAAU,iDACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdhB,mBAAS,CACjCuB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAWxC,OANAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAAAd,GAAG,OAAIY,EAAS,CACrCf,KAAMG,EACNU,SAAS,SAEV,CAACpB,IACGqB,EDR0BI,CAAazB,GAAtCoB,EAD+B,EAC/BA,QAAcP,EADiB,EACtBN,KAGjB,OACE,oCACE,wBAAIS,UAAU,4CAA4ChB,GACzDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAEXH,EAAOJ,KAAI,SAAAiB,GAAK,OAAI,kBAAC,EAAD,eAAaC,IAAKD,EAAMf,IAAQe,UES/CE,EApBM,WAAO,IAAD,EACW5C,mBAAS,CAAC,eADrB,mBAClB6C,EADkB,KACN9C,EADM,KAKzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEI8C,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,UCZ9C8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.5984ddd9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(estadoAnterior => [inputValue, ...estadoAnterior])\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input placeholder=\"Ingresa categoria\" type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: propTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=izpbOD6FjxPYAVCJLhL6fOeLtWcCuG9d`\r\n  const respo = await fetch(url)\r\n  const {data} = await respo.json()\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  return gifs\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInTopLeft\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n// import { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { loading, data:images } = useFetchGifs(category)\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeInTopLeft\">{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(image => <GifGridItem key={image.id} {...image} />)\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n  useEffect(() => {\r\n    getGifs(category).then(img => setstate({\r\n      data: img,\r\n      loading: false\r\n    }))\r\n  }, [category])\r\n  return state\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['javascript'])\r\n  // const handleAdd = () => {\r\n  //   setCategories([...categories, 'Ironman'])\r\n  // }\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr></hr>\r\n      <ol>\r\n        {\r\n          categories.map(category =>\r\n            <GifGrid key={category} category={category} />\r\n          )\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}